name: Build

on:
  push:
    paths:
    - 'source/**'
    - 'package.json'
    - 'package-lock.json'
    branches:
    - '**'
    tags:
    - '*.*.*'
  pull_request:
    branches:
    - '**'
  workflow_dispatch:

env:
  REGISTRY_NAME: ghcr.io
  PUBLISHER_WEBSITE: https://viral32111.com

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    steps:
    - name: Clone repository
      uses: actions/checkout@v3

    - name: Setup Node
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Install dependencies
      run: npm clean-install

    - name: Compile TypeScript
      run: npx tsc --pretty --sourceMap false --alwaysStrict --noImplicitAny --noUnusedLocals --noUnusedParameters

    - name: Upload JavaScript
      uses: actions/upload-artifact@v3
      with:
        name: DiscordBot
        path: ./emit/

    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY_NAME }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        platforms: linux/amd64

    - name: Create metadata for Docker image
      id: metadata
      uses: docker/metadata-action@v4
      with:
        flavor: latest=true
        images: ${{ env.REGISTRY_NAME }}/${{ github.repository_owner }}/discordbot
        tags: |
          type=ref,event=pr
          type=ref,event=branch
          type=semver,pattern={{major}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}.{{minor}}.{{patch}}
        labels: |
          org.opencontainers.image.title=Discord Bot
          org.opencontainers.image.description=The official Discord bot for my community.
          org.opencontainers.image.vendor=${{ github.repository_owner }}
          com.docker.extension.publisher-url=${{ env.PUBLISHER_WEBSITE }}

    - name: Build & push Docker image
      uses: docker/build-push-action@v3
      with:
        push: ${{ github.event_name != 'pull_request' }}
        file: ./Dockerfile
        context: ./emit/
        tags: ${{ steps.metadata.outputs.tags }}
        labels: ${{ steps.metadata.outputs.labels }}
        pull: true

    - name: Create release
      if: ${{ github.ref_type == 'tag' && github.event_name != 'pull_request' }}
      uses: softprops/action-gh-release@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: ${{ github.ref_name }}
        draft: true
        body: |
          ```
          ${{ steps.metadata.outputs.tags }}
          ```
